#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h>
//Struct Dono, nomeada para somente D/
    typedef struct Dono{
    char endereco[81];
    char nome[51];
    char CPF[12];
}D;

typedef struct Carro{
    char placa[9];
    short int  ano;
    short  int multa;
    D* d1 ;
}C;

// É necessário incluir: #include<string.h> como biblioteca.
D* criaDono(char* nome, char* endereco, char* CPF) {
    D* d1 = (D*)malloc(sizeof(D));
    //Apenas para garantir que exista um terminador de string.
    strcpy((d1->endereco), endereco);
    //Apenas para garantir que exista um terminador de string.
    strcpy((d1->nome), nome);
    //Apenas para garantir que exista um terminador de string.
    strcpy((d1->CPF), CPF);
    return d1;
}

C* criaCarro(D* d1 ,char* placa, short int ano, short int multa){
	
	C* res = (C*)malloc(sizeof(C)); 
	res -> d1 = d1;
    strcpy((res -> placa), placa);
    res ->  ano = 2015;
    res -> multa = 10;
    	
    return res;
}
	

int main() {
	
    D* d1 = criaDono("Kennedy Lopes", "22222222222", "Rua asfaltada");
    printf("Nome: %s\nEndereco: %s\nCPF: %s\n ", d1->nome, d1->CPF, d1->endereco);
    
    printf("\n");  
	  
    C* res = criaCarro("Kennedy", "ABC1234", "2015", "10");
    //printf("placa: %s\nano de fabricaçao: %i\ntotal de multa: %d\npropietario: %s\n",res->placa, res->ano, res->multa, res->d1);
    printf("propietario: %s\nPlaca: %s\nAno de fabricaçao: %i\nTotal de multa: %d\n",res->d1,res->placa, res->ano, res->multa);
   
    return 0;
}